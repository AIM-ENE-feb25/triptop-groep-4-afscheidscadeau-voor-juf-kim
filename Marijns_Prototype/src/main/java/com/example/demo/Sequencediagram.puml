@startuml
actor User
participant BookingController
participant Unirest
participant JSONObject
participant Decider
participant FindNewBookingState
participant FindNewBooking

User -> BookingController: checkAvailability(hotelId, checkin, checkout)
BookingController -> Unirest: get(url)
Unirest -> BookingController: HttpResponse<String>
BookingController -> JSONObject: new JSONObject(response.getBody())
BookingController -> JSONObject: getJSONObject("data")
BookingController -> JSONObject: getJSONArray("avDates")

alt avDates is null or empty
    BookingController -> Decider: start(false)
    Decider -> FindNewBookingState: handle(decider, false)
    FindNewBookingState -> FindNewBooking: bookingReplacement()
    FindNewBooking -> FindNewBookingState: "We found a new booking for you"
    FindNewBookingState -> Decider: setState(null)
    BookingController -> User: "No availability found"
else
    BookingController -> Decider: start(true)
    BookingController -> User: avDates.toString()
end

BookingController -> User: "Internal Server Error: " + e.getMessage() (if exception occurs)
@enduml